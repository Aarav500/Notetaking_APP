apiVersion: v1
kind: Secret
metadata:
  name: ideater-db-secret
  labels:
    app: ideater
    tier: backend
type: Opaque
data:
  DB_USER: dXNlcg==
  DB_PASSWORD: cGFzc3dvcmQ=
  DB_HOST: bG9jYWxob3N0
  DB_PORT: NTQzMg==
  DB_NAME: aWRlYXRlcl9kYg==
  DATABASE_URL: c3FsaXRlOi8vL2lkZWF0ZXIuZGI=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ideater-backend
  labels:
    app: ideater
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ideater
      tier: backend
  template:
    metadata:
      labels:
        app: ideater
        tier: backend
    spec:
      containers:
      - name: backend
        image: ideater-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: ideater-config
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ideater-db-secret
              key: DATABASE_URL
        volumeMounts:
        - name: oracle-wallet
          mountPath: /opt/oracle/wallet
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 20
      volumes:
      - name: oracle-wallet
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ideater-backend
  labels:
    app: ideater
    tier: backend
spec:
  type: ClusterIP
  selector:
    app: ideater
    tier: backend
  ports:
  - name: http
    port: 8000
    targetPort: 8000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ideater-frontend-nginx
  labels:
    app: ideater
    tier: frontend
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            proxy_pass http://ideater-backend:8000/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /openapi.json {
            proxy_pass http://ideater-backend:8000/openapi.json;
        }

        location /docs {
            proxy_pass http://ideater-backend:8000/docs;
        }

        location /redoc {
            proxy_pass http://ideater-backend:8000/redoc;
        }

        location /health {
            return 200 'ok';
            add_header Content-Type text/plain;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ideater-frontend
  labels:
    app: ideater
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ideater
      tier: frontend
  template:
    metadata:
      labels:
        app: ideater
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: ideater-frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 10
      volumes:
      - name: nginx-conf
        configMap:
          name: ideater-frontend-nginx
          items:
          - key: default.conf
            path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: ideater-frontend
  labels:
    app: ideater
    tier: frontend
spec:
  type: ClusterIP
  selector:
    app: ideater
    tier: frontend
  ports:
  - name: http
    port: 80
    targetPort: 80
